1. Методы используемые для фильтрации пользователя, почему выбрали именно эти методы фильтрации.
Все методы фильтрации находятся в классе Services:

- checkConnection() - Проверка наличия интернет-соединение у пользователя
- checkIP() - Проверка IP по формату IPv4-адреса. в коде проверяется демонстрационный IP адрес, не настоящий
- checkLocationAllowed() - Проверка на доступы к геопозиции
- checkUserCountry() - Фильтрация пользователя по стране
- checkUserAge() - Фильтрация пользователя по возрасту
- checkUserOS() - Фильтрация пользователя по операционной системе

2. Какие свои методы фильтрации или уникализации кода придумали и добавили
Фильтрация по стране и по возрасту демонстрирует возможность проверки пользователей, если в приложении будет возможность указывать эти данные
- checkUserCountry() 
- checkUserAge() 
- checkUserOS() 

3. Приложить инструкцию как включить и отключить фильтрацию в коде для оценки обеих частей приложения (Заглушка и WebView)
В данном случае в нашем приложении регулирование заглушки можно произвести за счет включения или отключения интернета.
Если интернет соединение подключено, то показывается серая часть (webView).
Если интернет соединение отключено, то показывается белая часть (заглушка).
Это сделано для удобства проверки тестового задания.
В реальном случае управление заглушкой нужно было бы осуществлять с помощью параметра, приходящего, например, из Firebase.

4. Какие технологии использовали для разработки своего приложения:
- Flutter/Dart
- Flame Engine
- Flame Audio
- Future/async/await
- WebView
- Lottie Animations
- Shared Preferences
- file_picker
- cookie_jar